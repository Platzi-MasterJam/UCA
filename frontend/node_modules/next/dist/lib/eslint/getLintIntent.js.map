{"version":3,"sources":["../../../lib/eslint/getLintIntent.ts"],"names":["getLintIntent","eslintrcFile","pkgJsonEslintConfig","content","fs","readFile","encoding","then","txt","trim","replace","firstTimeSetup","CommentJson","stringify"],"mappings":"yEAAA,sBAEA,oF,qzBAIO,cAAeA,CAAAA,aAAf,CACLC,YADK,CAELC,mBAFK,CAGwB,CAC7B,GAAID,YAAJ,CAAkB,CAChB,KAAME,CAAAA,OAAO,CAAG,KAAMC,cAAGC,QAAH,CAAYJ,YAAZ,CAA0B,CAAEK,QAAQ,CAAE,MAAZ,CAA1B,EAAgDC,IAAhD,CACnBC,GAAD,EAASA,GAAG,CAACC,IAAJ,GAAWC,OAAX,CAAmB,KAAnB,CAA0B,EAA1B,CADW,CAEpB,IAAM,IAFc,CAAtB,CAKA;AACA,MAAO,CACLC,cAAc,CACZR,OAAO,GAAK,EAAZ,EACAA,OAAO,GAAK,IADZ,EAEAA,OAAO,GAAK,KAFZ,EAGAA,OAAO,GAAK,qBALT,CAAP,CAOD,CAdD,IAcO,IAAID,mBAAJ,CAAyB,CAC9B,MAAO,CACLS,cAAc,CAAEC,WAAW,CAACC,SAAZ,CAAsBX,mBAAtB,IAA+C,IAD1D,CAAP,CAGD,CAED,MAAO,MAAP,CACD","sourcesContent":["import { promises as fs } from 'fs'\n\nimport * as CommentJson from 'next/dist/compiled/comment-json'\n\nexport type LintIntent = { firstTimeSetup: boolean }\n\nexport async function getLintIntent(\n  eslintrcFile: string | null,\n  pkgJsonEslintConfig: string | null\n): Promise<LintIntent | false> {\n  if (eslintrcFile) {\n    const content = await fs.readFile(eslintrcFile, { encoding: 'utf8' }).then(\n      (txt) => txt.trim().replace(/\\n/g, ''),\n      () => null\n    )\n\n    // User is setting up ESLint for the first time setup if eslint config exists but is empty\n    return {\n      firstTimeSetup:\n        content === '' ||\n        content === '{}' ||\n        content === '---' ||\n        content === 'module.exports = {}',\n    }\n  } else if (pkgJsonEslintConfig) {\n    return {\n      firstTimeSetup: CommentJson.stringify(pkgJsonEslintConfig) === '{}',\n    }\n  }\n\n  return false\n}\n"]}