{"version":3,"sources":["../../../next-server/server/config-utils.ts"],"names":["reasonMessage","reason","loadWebpackHook","phase","dir","useWebpack5","worker","Worker","path","resolve","__dirname","enableWorkerThreads","numWorkers","result","shouldLoadWithWebpack5","Log","info","enabled","Boolean","end"],"mappings":"6EAAA,kDACA,uCACA,mEAEA,wD,4/BAIA,QAASA,CAAAA,aAAT,CAAuBC,MAAvB,CAA6C,CAC3C,OAAQA,MAAR,EACE,IAAK,aAAL,CACE,MAAO,gCAAP,CACF,IAAK,gBAAL,CACE,MAAO,iCAAP,CACF,IAAK,WAAL,CACE,MAAO,mBAAP,CACF,IAAK,gBAAL,CACE,MAAO,gDAAP,CACF,IAAK,mBAAL,CACE,MAAO,mDAAP,CACF,IAAK,WAAL,CACE,MAAO,oBAAP,CACF,QACE,MAAO,EAAP,CAdJ,CAgBD,CAEM,cAAeC,CAAAA,eAAf,CAA+BC,KAA/B,CAA8CC,GAA9C,CAA2D,CAChE,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CACA,KAAMC,CAAAA,MAAW,CAAG,GAAIC,mBAAJ,CAClBC,cAAKC,OAAL,CAAaC,SAAb,CAAwB,0BAAxB,CADkB,CAElB,CACEC,mBAAmB,CAAE,KADvB,CAEEC,UAAU,CAAE,CAFd,CAFkB,CAApB,CAOA,GAAI,CACF,KAAMC,CAAAA,MAAmB,CAAG,KAAMP,CAAAA,MAAM,CAACQ,sBAAP,CAA8BX,KAA9B,CAAqCC,GAArC,CAAlC,CACAW,GAAG,CAACC,IAAJ,CACG,iBAAgBH,MAAM,CAACI,OAAP,CAAiB,GAAjB,CAAuB,GAAI,aAAYjB,aAAa,CACnEa,MAAM,CAACZ,MAD4D,CAEnE,4CAHJ,EAKAI,WAAW,CAAGa,OAAO,CAACL,MAAM,CAACI,OAAR,CAArB,CACD,CAAC,cAAM,CACN;AACA;AACD,CAXD,OAWU,CACRX,MAAM,CAACa,GAAP,GACD,CAED,+BAAQd,WAAR,EACD","sourcesContent":["import path from 'path'\nimport { Worker } from 'jest-worker'\nimport * as Log from '../../build/output/log'\nimport { CheckReasons, CheckResult } from './config-utils-worker'\nimport { install, shouldLoadWithWebpack5 } from './config-utils-worker'\n\nexport { install, shouldLoadWithWebpack5 }\n\nfunction reasonMessage(reason: CheckReasons) {\n  switch (reason) {\n    case 'future-flag':\n      return 'future.webpack5 option enabled'\n    case 'no-future-flag':\n      return 'future.webpack5 option disabled'\n    case 'no-config':\n      return 'no next.config.js'\n    case 'webpack-config':\n      return 'custom webpack configuration in next.config.js'\n    case 'no-webpack-config':\n      return 'no custom webpack configuration in next.config.js'\n    case 'test-mode':\n      return 'internal test mode'\n    default:\n      return ''\n  }\n}\n\nexport async function loadWebpackHook(phase: string, dir: string) {\n  let useWebpack5 = false\n  const worker: any = new Worker(\n    path.resolve(__dirname, './config-utils-worker.js'),\n    {\n      enableWorkerThreads: false,\n      numWorkers: 1,\n    }\n  )\n  try {\n    const result: CheckResult = await worker.shouldLoadWithWebpack5(phase, dir)\n    Log.info(\n      `Using webpack ${result.enabled ? '5' : '4'}. Reason: ${reasonMessage(\n        result.reason\n      )} https://nextjs.org/docs/messages/webpack5`\n    )\n    useWebpack5 = Boolean(result.enabled)\n  } catch {\n    // If this errors, it likely will do so again upon boot, so we just swallow\n    // it here.\n  } finally {\n    worker.end()\n  }\n\n  install(useWebpack5)\n}\n"]}